services:
  db:
    image: postgres:14
    container_name: biasbreaker-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # Mount your PostgreSQL data directory. Ensure the permissions on 
    # /home/jaydipsinh/docker/pgdata are set to allow Postgres to read/write.
    volumes:
      - /home/jaydipsinh/docker/pgdata:/var/lib/postgresql/data
    networks:
      - biasbreaker-network

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: biasbreaker-backend
    ports:
      - "9987:9987"
    environment:
      - DEVELOPMENT_MODE=${DEVELOPMENT_MODE}
      - DJANGO_SECERET_KEY=${DJANGO_SECERET_KEY}
      - DEBUG=${DEBUG}
      - AWS_SES_ACCESS_KEY_ID=${AWS_SES_ACCESS_KEY_ID}
      - AWS_SES_SECRET_ACCESS_KEY=${AWS_SES_SECRET_ACCESS_KEY}
      - AWS_SES_REGION_NAME=${AWS_SES_REGION_NAME}
      - AWS_SES_FROM_EMAIL=${AWS_SES_FROM_EMAIL}
      - DOMAIN=${DOMAIN}
      - AUTH_COOKIE_SECURE=${AUTH_COOKIE_SECURE}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - REDIRECT_URIS=${REDIRECT_URIS}
      - GOOGLE_OAUTH2_KEY=${GOOGLE_OAUTH2_KEY}
      - GOOGLE_OAUTH2_SECRET=${GOOGLE_OAUTH2_SECRET}
      - HUGGINGFACE_TOKEN=${HUGGINGFACE_TOKEN}
      - GEMINI_TOKEN=${GEMINI_TOKEN}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db
    networks:
      - biasbreaker-network

  frontend:
    build:
      context: ../frontend/biasbracker_client
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_HOST: ${NEXT_PUBLIC_HOST}
        NEXT_PUBLIC_HOST_WS: ${NEXT_PUBLIC_HOST_WS}
        NEXT_PUBLIC_HOST_FRONTEND: ${NEXT_PUBLIC_HOST_FRONTEND}
    container_name: biasbreaker-frontend
    ports:
      - "4987:4987"
    depends_on:
      - backend
    networks:
      - biasbreaker-network

  nginx:
    image: nginx:alpine
    container_name: biasbreaker-nginx
    depends_on:
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # Mount the directory for certificates. This is read-only.
      - /home/jaydipsinh/docker/letsencrypt:/etc/letsencrypt:ro
      # Mount the webroot for the ACME challenge (read-only here).
      - /home/jaydipsinh/docker/certbot/www:/var/www/certbot:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - biasbreaker-network

  certbot:
    image: certbot/certbot
    container_name: biasbreaker-certbot
    volumes:
      - /home/jaydipsinh/docker/letsencrypt:/etc/letsencrypt
      - /home/jaydipsinh/docker/certbot/www:/var/www/certbot
    command: >
      certonly --webroot
      --webroot-path=/var/www/certbot
      --email biasbreaker.team@gmail.com
      --agree-tos --no-eff-email
      -d persuasive.research.cs.dal.ca

networks:
  biasbreaker-network:
    driver: bridge
